<?xml version="1.0" encoding="UTF-8"?>
<content type="CHA"><lesson_id>957</lesson_id>
<was_chapter_id></was_chapter_id>
<keywords></keywords>
<childs_cnt>2</childs_cnt>
<is_childs>1</is_childs>
<sort>1000</sort>
<timestamp_x>1406800140</timestamp_x>
<date_create>1406636856</date_create>
<created_user_name>(admin) Иван Иванов</created_user_name>
<created_by>1</created_by>
<active>Y</active>
<name>Компоненты 2.0 (начальные сведения)</name>
<preview_picture></preview_picture>
<preview_text></preview_text>
<preview_text_type>text</preview_text_type>
<detail_text><![CDATA[<h4>Понятие компонента</h4> 

<p><div class="note"><b>Компонент</b> - специальная программная оболочка, позволяющая визуальными средствами системы вставлять и настраивать программный код в шаблон сайта или на его страницы. Компонент предназначен для вывода динамичной информации из Базы данных сайта.</div></p>

<p>Компоненты являются блоками, с помощью которых строится публичная часть сайта. Они позволяют многократно использовать единожды написанный и отлаженный код в рамках одного сайта или на разных сайтах. Поставляемые с продуктом системные компоненты регулярно обновляются, при этом расширяется их функционал и исправляются возможные ошибки.</p>
 
<p>В ранних версиях <b>«1C-Битрикс: Управление сайтом»</b> встречаются компоненты 1.0. На данный момент используются компоненты версии 2.0.</p>

<h4>Виды компонентов</h4>
<p>Компоненты делятся на <b>простые</b> (одностраничные) и <b>комплексные</b> (многостраничные). </p> 
<p>С точки зрения структуры и способов подключения простые и комплексные компоненты очень похожи. Но с точки зрения функционирования они сильно отличаются.</p>  

<p><b>Простые </b>(обычные, одностраничные) компоненты создают какую-либо область на одной странице. Их удобно использовать, когда на одной странице требуется разместить данные из различных модулей (блоги и инфоблоки, например) или данные из разных инфоблоков (новости и каталог товаров). Для создания полного раздела новостей или каталога товаров пользоваться ими довольно неудобно: приходится создавать большое число статических страниц и следить за тем, чтобы они были корректно связаны друг с другом.</p>

<p><b>Комплексные </b>(сложные, многостраничные) компоненты создают <b>разделы сайта</b>. Например, компонент каталога создает на сайте весь раздел каталога: список каталогов, список групп и страницы товаров. То есть, комплексный компонент состоит из набора динамических страниц при просмотре сайта, но из одной статической страницы на физическом уровне. Комплексные компоненты строятся на основе простых компонентов, используя их логику. 
</p>

<p>Преимущество комплексных компонентов состоит в автоматической компоновке параметров одностраничных компонентов и отсутствии необходимости их связывать.</p>
 
<p><b>Комплексные компоненты разрешают следующие проблемы:</b></p>
 
<ul> 
  <li>Отпадает необходимость создания большого числа статических страниц для размещения всех требуемых подкомпонентов. Отпадает необходимость отдельно настраивать для каждого из подкомпонентов общие (пересекающиеся) свойства (например, тип инфоблока и инфоблок). </li>
 
  <li>Происходит установление сложных взаимосвязей между подкомпонентами. Например, нет необходимости для страницы со списком сообщений темы форума настраивать, как эта страница может указать на страницу списка тем форума, а как на страницу профиля посетителя. </li>
 
  <li>В компонент (даже с кастомизированными шаблонами вывода) можно добавить новую страницу. Например, если на форуме появится страница (подкомпонент) по выводу 10 посетителей с самым высоким рейтингом, то эта страница станет доступной и в публичной части. </li>
 
  <li>Можно сменить шаблон вывода всего комплексного компонента одним действием, а не настраивать вывод каждого из подкомпонентов. </li>
 </ul>
 
<p>Алгоритм работы комплексного компонента таков:</p>

<ol>
  <li>на основании действий посетителя сайта (например, переход по пунктам меню) комплексный компонент определяет, какая страница должна быть показана пользователю, и подключает свой шаблон компонента для этой динамической страницы;</li>
  <li>шаблон страницы подключает обычные компоненты, автоматически настраивая необходимым образом их свойства;</li>
  <li>обычные компоненты выполняют свою работу: запрашивают данные у ядра системы, форматируют их и выводят посетителю, а так же предоставляют пользователю различные элементы управления (ссылки, формы, кнопки и т.п.); </li>
  <li>пользователь с помощью каких-либо элементов управления, посылает новый запрос комплексному компоненту. </li>
</ol>

<div class="hint"><b>Примечание</b>: Несколько комплексных компонентов размещать на одной физической странице нельзя.</div>

<p><div class="hint"><b>Примечание</b>: При добавлении статической информации на страницу с комплексным компонентом она появится на всех  
создаваемых им страницах. Тоже самое происходит при добавлении статической информации на одну из страниц в составе комплексного компонента (например, детальная страница товара) - она появится на всех аналогичных страницах.</div></p>

<p style="margin-left: -5px;"><a href="javascript:ShowSwf('http://dev.1c-bitrix.ru/images/components2/components.swf',773,499)"><img width="70" height="61" border="0" align="absmiddle" src="cid:resources/res87/CfhKJ.ZJD2K.44f84c16b90f2.flash_movie_2.png" alt="Пример использования простых и комплексных компонентов. Демонстрационный ролик. (Flash)" /><b>Пример использования простых и комплексных компонентов. Демонстрационный ролик. (Flash)</b></a></p>
 ]]></detail_text>
<detail_picture></detail_picture>
<detail_text_type>html</detail_text_type>
<launch></launch>
<code></code>
<active_from></active_from>
<active_to></active_to>
<rating></rating>
<rating_type></rating_type>
<scorm></scorm>
<linked_lesson_id></linked_lesson_id>
<course_id></course_id>
<course_sort></course_sort>
<edge_sort>1000</edge_sort>
<id>957</id>
</content>